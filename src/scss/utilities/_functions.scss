@use "sass:map";
@use "sass:math";

/// GLOBAL FUNCTIONS

/// Convert 'px' Value To 'rem' Value
///
/// @group global
/// @access public
/// @param {number} $pxValue - value in px for rem conversion
/// @return {number} value in rem based
///
/// @example convert a px value to rem
///     font-size: functions.px-to-rem(16px);
///
@function px-to-rem($pxValue) {
  @return math.div($pxValue, 16px) * 1rem;
}

/// Convert 'pt' Value To 'rem' Value
///
/// @group global
/// @access public
/// @param {number} $ptValue - value in pt for rem conversion
/// @return {number} value in rem based
///
/// @example convert a pt value to rem
///     font-size: functions.pt-to-rem(12pt);
///
@function pt-to-rem($ptValue) {
  @return math.div($ptValue, 16px) * 1rem;
}

/// THEMIFY FUNCTIONS

/// Merge The Default Theme Component Map found in the component's file To A Themed One found in the theme's file
///
/// @group themify
/// @access public
/// @param {map} $default-component-style-map - the default component's theme preset found in the component's file itself
/// @param {map} $theme-component-style-map - the themed preset of that component found in the theme file
/// @return {map} map containing the themed preset and the default preset merged accordingly and missing keys from the default map set to null
///
@function themify-component-map-merge(
  $default-component-style-map,
  $theme-component-style-map
) {
  $result: ();
  @each $key, $value in $default-component-style-map {
    /// for each default key, check if available inside the themed map
    @if map.has-key($theme-component-style-map, $key) {
      /// Yes: set that key inside $result with the value of the themed ones
      $result: map.set(
        $result,
        $key,
        map.get($theme-component-style-map, $key)
      );
      /// No: set that inside $result with the value of null
    } @else {
      $result: map.set($result, $key, null);
    }
  }
  @return $result;
}

/// TYPOGRAPHY FUNCTIONS

/// Calculate Letter Spacing Function
///
/// @group global
/// @access public
/// @param {number} $pxSpace - letter spacing in px
/// @param {number} $pxFontSize - font size in px
/// @return {number} value for letter spacing property
///
/// @example get letter spacing
///     letter-spacing: function.get-letter-spacing(1.25, 14)
///
@function get-letter-spacing($pxSpace, $pxFontSize) {
  @return math.div($pxSpace, $pxFontSize) * 1em;
}
